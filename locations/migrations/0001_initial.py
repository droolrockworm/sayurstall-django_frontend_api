# Generated by Django 2.0.4 on 2018-06-28 16:01

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='logos/')),
                ('slug', models.SlugField(editable=False, max_length=100, unique=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Dealer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='HistoricalKWInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('history', models.TextField(help_text='Comma delimited list of 12 numbers')),
            ],
            options={
                'verbose_name_plural': 'Historical KW Info',
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('installation_date', models.DateField(default=datetime.date.today)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('state', models.CharField(blank=True, max_length=100, null=True)),
                ('zip_code', models.CharField(blank=True, max_length=100, null=True)),
                ('address', models.CharField(blank=True, max_length=100, null=True)),
                ('notification_emails', models.TextField(blank=True, help_text='Comma delimited list of email addresses.')),
                ('key', models.CharField(blank=True, max_length=40)),
                ('secret_key', models.CharField(blank=True, max_length=20)),
                ('has_unity', models.BooleanField(default=True, help_text='Does this installation have a Unity base station?')),
                ('report_type', models.CharField(blank=True, choices=[('standard', 'Unity Standard Report')], default='standard', max_length=20)),
                ('client_version', models.IntegerField(default=4)),
                ('is_online', models.BooleanField(default=False)),
                ('notify_when_offline', models.BooleanField(default=True)),
                ('tunnel_offset', models.IntegerField(default=0)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='locations.Client')),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('remote_username', models.CharField(blank=True, help_text="The user to log in as when remote controlling Unity. Make sure there's actually a user by this name set up in Unity! Leave blank to use the username.", max_length=40, null=True)),
                ('is_admin', models.BooleanField(default=False, help_text='Admins have access to all Locations. Only for K&L staff.')),
                ('client', models.ForeignKey(blank=True, help_text='Choose a client to give this user access to ALL locations that belong to that Client. Leave blank to choose specific Locations.', null=True, on_delete=django.db.models.deletion.CASCADE, to='locations.Client')),
                ('dealer', models.ForeignKey(blank=True, help_text='Choose a dealer to give this user access to ALL Clients that belong to that Dealer. Leave blank to choose specific Locations.', null=True, on_delete=django.db.models.deletion.CASCADE, to='locations.Dealer')),
                ('locations', models.ManyToManyField(blank=True, null=True, to='locations.Location')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'User Profiles',
                'ordering': ('user__username',),
            },
        ),
        migrations.AddField(
            model_name='historicalkwinfo',
            name='location',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='locations.Location'),
        ),
        migrations.AddField(
            model_name='client',
            name='dealer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='locations.Dealer'),
        ),
    ]
